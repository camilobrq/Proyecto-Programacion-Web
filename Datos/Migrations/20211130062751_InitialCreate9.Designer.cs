// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(ConsultorioContext))]
    [Migration("20211130062751_InitialCreate9")]
    partial class InitialCreate9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidad.Agenda", b =>
                {
                    b.Property<int>("idAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("citaidCita")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaDeseada")
                        .HasColumnType("datetime2");

                    b.Property<string>("horaCita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCita")
                        .HasColumnType("int");

                    b.Property<string>("idPsicologo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("psicologoidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("idAgenda");

                    b.HasIndex("citaidCita");

                    b.HasIndex("psicologoidentificacion");

                    b.ToTable("agendas");
                });

            modelBuilder.Entity("Entidad.Cita", b =>
                {
                    b.Property<int>("idCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaDeseada")
                        .HasColumnType("datetime2");

                    b.Property<string>("horaCita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pacienteidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tiposSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCita");

                    b.HasIndex("pacienteidentificacion");

                    b.ToTable("citas");
                });

            modelBuilder.Entity("Entidad.Diagnostico", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Psicologoidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("analisis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("consulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("identificacionPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificacionPsicologo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrePsicologo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pacienteidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pronostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recomendacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvaluacion");

                    b.HasIndex("Psicologoidentificacion");

                    b.HasIndex("pacienteidentificacion");

                    b.ToTable("diagnosticos");
                });

            modelBuilder.Entity("Entidad.Disponibilidad", b =>
                {
                    b.Property<int>("idDisponibilidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.HasKey("idDisponibilidad");

                    b.ToTable("disponibilidades");
                });

            modelBuilder.Entity("Entidad.Eps", b =>
                {
                    b.Property<int>("idEps")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Administradora")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEps");

                    b.ToTable("eps");
                });

            modelBuilder.Entity("Entidad.Paciente", b =>
                {
                    b.Property<string>("identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Eps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuarioidUsuario")
                        .HasColumnType("int");

                    b.HasKey("identificacion");

                    b.HasIndex("usuarioidUsuario");

                    b.ToTable("pacientes");
                });

            modelBuilder.Entity("Entidad.Psicologo", b =>
                {
                    b.Property<string>("identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UniversidadEgreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("areaEspecializada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("fechaFinalizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("mesesExperiencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuarioidUsuario")
                        .HasColumnType("int");

                    b.HasKey("identificacion");

                    b.HasIndex("usuarioidUsuario");

                    b.ToTable("psicologos");
                });

            modelBuilder.Entity("Entidad.Tratamiento", b =>
                {
                    b.Property<int>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Psicologoidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("codigo_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("identificacionPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificacionPsicologo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pacienteidentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tratamientoPaso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTratamiento");

                    b.HasIndex("Psicologoidentificacion");

                    b.HasIndex("pacienteidentificacion");

                    b.ToTable("tratamientos");
                });

            modelBuilder.Entity("Entidad.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.ToTable("usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("Entidad.Administrador", b =>
                {
                    b.HasBaseType("Entidad.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Entidad.Agenda", b =>
                {
                    b.HasOne("Entidad.Cita", "cita")
                        .WithMany("agenda")
                        .HasForeignKey("citaidCita");

                    b.HasOne("Entidad.Psicologo", "psicologo")
                        .WithMany("agendas")
                        .HasForeignKey("psicologoidentificacion");

                    b.Navigation("cita");

                    b.Navigation("psicologo");
                });

            modelBuilder.Entity("Entidad.Cita", b =>
                {
                    b.HasOne("Entidad.Paciente", "paciente")
                        .WithMany("citas")
                        .HasForeignKey("pacienteidentificacion");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("Entidad.Diagnostico", b =>
                {
                    b.HasOne("Entidad.Psicologo", "Psicologo")
                        .WithMany("evaluaciones")
                        .HasForeignKey("Psicologoidentificacion");

                    b.HasOne("Entidad.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteidentificacion");

                    b.Navigation("paciente");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("Entidad.Paciente", b =>
                {
                    b.HasOne("Entidad.Usuario", "usuario")
                        .WithMany("pacientes")
                        .HasForeignKey("usuarioidUsuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entidad.Psicologo", b =>
                {
                    b.HasOne("Entidad.Usuario", "usuario")
                        .WithMany("psicologos")
                        .HasForeignKey("usuarioidUsuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entidad.Tratamiento", b =>
                {
                    b.HasOne("Entidad.Psicologo", "Psicologo")
                        .WithMany()
                        .HasForeignKey("Psicologoidentificacion");

                    b.HasOne("Entidad.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteidentificacion");

                    b.Navigation("paciente");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("Entidad.Cita", b =>
                {
                    b.Navigation("agenda");
                });

            modelBuilder.Entity("Entidad.Paciente", b =>
                {
                    b.Navigation("citas");
                });

            modelBuilder.Entity("Entidad.Psicologo", b =>
                {
                    b.Navigation("agendas");

                    b.Navigation("evaluaciones");
                });

            modelBuilder.Entity("Entidad.Usuario", b =>
                {
                    b.Navigation("pacientes");

                    b.Navigation("psicologos");
                });
#pragma warning restore 612, 618
        }
    }
}
